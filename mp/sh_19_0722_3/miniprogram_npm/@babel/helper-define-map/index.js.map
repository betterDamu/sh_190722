{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.push = push;\nexports.hasComputed = hasComputed;\nexports.toComputedObjectFromClass = toComputedObjectFromClass;\nexports.toClassObject = toClassObject;\nexports.toDefineObject = toDefineObject;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _has = _interopRequireDefault(require(\"lodash/has\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toKind(node) {\n  if (t.isClassMethod(node) || t.isObjectMethod(node)) {\n    if (node.kind === \"get\" || node.kind === \"set\") {\n      return node.kind;\n    }\n  }\n\n  return \"value\";\n}\n\nfunction push(mutatorMap, node, kind, file, scope) {\n  const alias = t.toKeyAlias(node);\n  let map = {};\n  if ((0, _has.default)(mutatorMap, alias)) map = mutatorMap[alias];\n  mutatorMap[alias] = map;\n  map._inherits = map._inherits || [];\n\n  map._inherits.push(node);\n\n  map._key = node.key;\n\n  if (node.computed) {\n    map._computed = true;\n  }\n\n  if (node.decorators) {\n    const decorators = map.decorators = map.decorators || t.arrayExpression([]);\n    decorators.elements = decorators.elements.concat(node.decorators.map(dec => dec.expression).reverse());\n  }\n\n  if (map.value || map.initializer) {\n    throw file.buildCodeFrameError(node, \"Key conflict with sibling node\");\n  }\n\n  let key, value;\n\n  if (t.isObjectProperty(node) || t.isObjectMethod(node) || t.isClassMethod(node)) {\n    key = t.toComputedKey(node, node.key);\n  }\n\n  if (t.isProperty(node)) {\n    value = node.value;\n  } else if (t.isObjectMethod(node) || t.isClassMethod(node)) {\n    value = t.functionExpression(null, node.params, node.body, node.generator, node.async);\n    value.returnType = node.returnType;\n  }\n\n  const inheritedKind = toKind(node);\n\n  if (!kind || inheritedKind !== \"value\") {\n    kind = inheritedKind;\n  }\n\n  if (scope && t.isStringLiteral(key) && (kind === \"value\" || kind === \"initializer\") && t.isFunctionExpression(value)) {\n    value = (0, _helperFunctionName.default)({\n      id: key,\n      node: value,\n      scope\n    });\n  }\n\n  if (value) {\n    t.inheritsComments(value, node);\n    map[kind] = value;\n  }\n\n  return map;\n}\n\nfunction hasComputed(mutatorMap) {\n  for (const key of Object.keys(mutatorMap)) {\n    if (mutatorMap[key]._computed) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction toComputedObjectFromClass(obj) {\n  const objExpr = t.arrayExpression([]);\n\n  for (let i = 0; i < obj.properties.length; i++) {\n    const prop = obj.properties[i];\n    const val = prop.value;\n    val.properties.unshift(t.objectProperty(t.identifier(\"key\"), t.toComputedKey(prop)));\n    objExpr.elements.push(val);\n  }\n\n  return objExpr;\n}\n\nfunction toClassObject(mutatorMap) {\n  const objExpr = t.objectExpression([]);\n  Object.keys(mutatorMap).forEach(function (mutatorMapKey) {\n    const map = mutatorMap[mutatorMapKey];\n    const mapNode = t.objectExpression([]);\n    const propNode = t.objectProperty(map._key, mapNode, map._computed);\n    Object.keys(map).forEach(function (key) {\n      const node = map[key];\n      if (key[0] === \"_\") return;\n      const prop = t.objectProperty(t.identifier(key), node);\n      t.inheritsComments(prop, node);\n      t.removeComments(node);\n      mapNode.properties.push(prop);\n    });\n    objExpr.properties.push(propNode);\n  });\n  return objExpr;\n}\n\nfunction toDefineObject(mutatorMap) {\n  Object.keys(mutatorMap).forEach(function (key) {\n    const map = mutatorMap[key];\n    if (map.value) map.writable = t.booleanLiteral(true);\n    map.configurable = t.booleanLiteral(true);\n    map.enumerable = t.booleanLiteral(true);\n  });\n  return toClassObject(mutatorMap);\n}"]}